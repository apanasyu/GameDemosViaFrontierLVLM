I want to design a game, I would like to do it using library pygame (I have everything setup for this already), I want to start in Pycharm Community edition using: if __name__ == "__main__": main() I want a single python file as output.

Description of game:
PySnake: Core Design & Technical Specification
Version: 1.0

1. Core Gameplay Loop
The player controls a snake on a grid. The goal is to eat food items that appear randomly. Each food item eaten increases the snake's length and the player's score. The game ends if the snake collides with the wall or its own body. Difficulty increases as the game progresses by speeding up the snake's movement.

2. Game Rules & Logic
Snake:
Starts as a 3-segment body.
Moves one grid cell per game tick.
Rule: Cannot reverse direction (e.g., cannot go Left if currently moving Right).
Food:
A single item on the grid at a time.
When eaten, score increases by 10 points, snake grows by 1 segment, and food respawns on a random empty cell.
Difficulty:
Game speed (tick rate) increases by 1 for every 5 food items eaten.
Game Over Conditions:
Snake head collides with any of the four screen boundaries.
Snake head collides with any of its own body segments.
3. Controls
Movement: Arrow Keys or W, A, S, D
Start / Restart: Enter
Pause / Resume: P
Quit Game: Escape
4. Game States & Flow
The application must manage three distinct states:

Main Menu → Gameplay ↔ Paused → Game Over

Main Menu: Displays title and "Press Enter to Start".
Gameplay: The active game. Renders snake, food, and HUD.
Paused: Freezes game logic and displays a "PAUSED" overlay.
Game Over: Displays final score and "Press Enter to Play Again".
5. UI & Visuals
Aesthetic: Minimalist, high-contrast, retro/pixel style.
Font: A single, clear, fixed-width or pixel-style font.
Color Palette:
Background: Dark Gray (#222222)
Snake: Bright Green (#00FF00)
Food: Bright Red (#FF0000)
Text/UI: White (#FFFFFF)
Screen Layouts:
Main Menu: Centered title and prompt. Display high score at the bottom.
Gameplay: Top HUD banner for score, main grid area below.
HUD: "SCORE: [value]" (left) and "HIGH SCORE: [value]" (right).
Game Over: Centered "GAME OVER" text, final score, and restart prompt over the final game state. Display "NEW HIGH SCORE!" if applicable.
6. Pygame Technical Specifications
Display:
Window Size: 800 x 600 pixels.
HUD Height: 40 pixels.
Game Area: 800 x 560 pixels.
Grid System:
Cell Size: 20 x 20 pixels.
Grid Dimensions: 40 cells wide x 28 cells high.
Game Logic:
Movement must be tick-based, not framerate-dependent.
Initial Tick Rate: 10 ticks/sec.
All game objects (snake, food) align to this grid.
Graphics:
Use pygame.draw.rect() for all game elements (snake, food). No image assets required.
Data Persistence:
High score must be saved to and read from a simple text or JSON file (e.g., highscore.txt).